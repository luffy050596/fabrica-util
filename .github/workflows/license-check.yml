# Create a github action that runs the license check script and fails if it exits with a non-zero status

name: License Check
on: [push, pull_request]
permissions:
  contents: read
  pull-requests: write

jobs:
  license-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Install go-licenses
        run: go install github.com/google/go-licenses@latest

      - name: Check licenses
        id: license_check
        run: |
          ./hack 2> >(grep -v "has empty version, defaults to HEAD" >&2 || true)
        continue-on-error: true

      - name: Generate license report
        if: steps.license_check.outcome == 'success'
        run: |
          ./hack/licenses-generate 2> >(grep -v "has empty version, defaults to HEAD" >&2 || true)

      - name: Upload license report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            DEPENDENCIES.md
            third-party-licenses.*.md
            license-check-warnings.log

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.license_check.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const output = `## ⚠️ License Check Failed

            Some dependencies are using licenses that are not on the approved list.

            Please check the workflow logs for details on which licenses are not allowed.

            You may need to:
            1. Update the dependencies to use approved licenses
            2. Request an exception for the specific dependency
            3. Update the allowed licenses list in the \`hack\` script

            Approved licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, MPL-2.0

            **Note**: Warnings about "empty version, defaults to HEAD" can be safely ignored and are filtered from the output.`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            } catch (error) {
              console.log(error);
            }

      - name: Fail if license check failed
        if: steps.license_check.outcome == 'failure'
        run: |
          echo "❌ License check failed. Please check the logs for details on non-compliant licenses."
          exit 1
